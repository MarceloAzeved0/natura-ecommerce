// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(100)
  email     String    @db.VarChar(254)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()
  Order     Order[]
}

model Order {
  id        Int       @id @default(autoincrement())
  userId    Int
  price     Float     @db.DoublePrecision
  discount  Float?    @db.DoublePrecision
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()

  user     User           @relation(fields: [userId], references: [id], onDelete: Restrict)
  products OrderProduct[]
}

model OrderProduct {
  id        Int       @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Restrict)
  Product Product @relation(fields: [productId], references: [id], onDelete: Restrict)
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Float     @db.DoublePrecision
  discount    Float?    @db.DoublePrecision
  imageURL    String    @db.VarChar(254)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt()

  orders OrderProduct[]
}
